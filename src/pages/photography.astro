---
import { getImage } from "astro:assets";
import BaseLayout from "../layouts/BaseLayout.astro";

// Get all image modules
const arcImageImports = import.meta.glob<{ default: string }>("/src/images/arc/*", { eager: true });
const randImageImport = import.meta.glob<{ default: string }>("/src/images/random/*", { eager: true });

function getImages(path: Record<string, { default: string }>): string[] {
  return Object.values(path).map((mod) => mod.default);
}

function splitArrayIntoParts<T>(arr: T[], n: number): T[][] {
  const result: T[][] = [];
  const chunkSize = Math.ceil(arr.length / n);
  for (let i = 0; i < arr.length; i += chunkSize) {
    result.push(arr.slice(i, i + chunkSize));
  }
  return result;
}

type ImageCategory = {
  title: string;
  images: string[];
};

const allImages: ImageCategory[] = [
  {
    title: "Architecture",
    images: getImages(arcImageImports)
  },
  {
    title: "Random",
    images: getImages(randImageImport)
  }
];
---

<BaseLayout pageTitle="Photography">
  <section class="mt-20 max-w-6xl mx-auto p-4">
    {allImages.map((obj) => (
      <div>
        <h1 class="text-2xl font-bold my-4">{obj.title}</h1>

        {/* Mobile view: 1 column */}
        <div class="flex flex-col gap-2 items-center md:hidden">
          {obj.images.map((imageSrc, index) => (
            <img
              src={imageSrc.src}
              alt={`${obj.title} image ${index + 1}`}
              class="rounded shadow object-contain w-[80%] h-auto"
              loading="lazy"
            />
          ))}
        </div>

        <div class="hidden md:flex lg:hidden gap-4">
          {splitArrayIntoParts(obj.images, 2).map((column, colIdx) => (
            <div class="flex flex-col gap-2 w-1/2 lg:w-1/3" key={colIdx}>
              {column.map((imageSrc, imgIdx) => (
                <img
                  src={imageSrc.src}
                  alt={`${obj.title} image ${colIdx}-${imgIdx}`}
                  class="rounded shadow object-contain w-full h-auto"
                  loading="lazy"
                />
              ))}
            </div>
          ))}
        </div>

        <div class="hidden lg:flex gap-4">
          {splitArrayIntoParts(obj.images, 3).map((column, colIdx) => (
            <div class="flex flex-col gap-2 w-1/2 lg:w-1/3" key={colIdx}>
              {column.map((imageSrc, imgIdx) => (
                <img
                  src={imageSrc.src}
                  alt={`${obj.title} image ${colIdx}-${imgIdx}`}
                  class="rounded shadow object-contain w-full h-auto"
                  loading="lazy"
                />
              ))}
            </div>
          ))}
        </div>

      </div>
    ))}
  </section>
</BaseLayout>
